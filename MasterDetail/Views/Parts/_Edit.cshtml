@model MasterDetail.Models.Part

<div data-role="page">
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "partchoice" }))
{
    <div class="modal-header">
        <a class="close" data-dismiss="modal" aria-hidden="True">&times;</a>
        <h4 class="modal-title">Edit Part</h4>
    </div>

    <div class="modal-body">
        <p id="MessageToClient" class="text-danger"></p>

        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PartId)
            @Html.HiddenFor(model => model.WorkOrderId)

            <div class="form-group">
                @Html.LabelFor(model => model.InventoryItemCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InventoryItemCode, new
               {
                   htmlAttributes = new
                       {
                           @class = "ui-autocomplete-input form-control",
                           data_url = Url.Action("GetInventoryItemsForAutocomplete", "InventoryItems")
                       }
               })
                    @Html.ValidationMessageFor(model => model.InventoryItemCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InventoryItemName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InventoryItemName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.InventoryItemName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", onchange = "recalculatePart()" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", onchange = "recalculatePart()" } })
                    @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExtendedPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExtendedPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsInstalled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsInstalled)
                        @Html.ValidationMessageFor(model => model.IsInstalled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class="modal-footer">
        <a class="btn btn-default" data-dismiss="modal">Cancel</a>
        <input class="btn btn-primary" type="submit" value="Update" />
    </div>
}
